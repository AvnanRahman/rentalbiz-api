steps:
- name: node:18.16.0
  entrypoint: npm
  args: ["install"]
- name: node:18.16.0
  entrypoint: npm
  args: ["run", "create-env"]
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args: 
   - '-c'
   - |
      cat app.yaml | awk "{ if (NR == $(grep -n '%db_host%' app.yaml | cut -d : -f 1)) print \"    DB_HOST: $$DB_HOST\"; else print }" > app.yaml
      cat app.yaml | awk "{ if (NR == $(grep -n '%db_name%' app.yaml | cut -d : -f 1)) print \"    DB_NAME: $$DB_NAME\"; else print }" > app.yaml
      cat app.yaml | awk "{ if (NR == $(grep -n '%db_user%' app.yaml | cut -d : -f 1)) print \"    DB_USER: $$DB_USER\"; else print }" > app.yaml
      cat app.yaml | awk "{ if (NR == $(grep -n '%db_pass%' app.yaml | cut -d : -f 1)) print \"    DB_PASS: $$DB_PASS\"; else print }" > app.yaml
      cat app.yaml | awk "{ if (NR == $(grep -n '%jwt_secret%' app.yaml | cut -d : -f 1)) print \"    JWT_SECRET: $$JWT_SECRET\"; else print }" > app.yaml
      gcloud app deploy
  secretEnv: ['DB_HOST', 'DB_NAME', 'DB_USER', 'DB_PASS', 'JWT_SECRET']
availableSecrets:
  secretManager:
  - versionName: projects/1045366563853/secrets/DB_HOST/versions/1
    env: 'DB_HOST'
  - versionName: projects/1045366563853/secrets/DB_NAME/versions/1
    env: 'DB_NAME'
  - versionName: projects/1045366563853/secrets/DB_USER/versions/1
    env: 'DB_USER'
  - versionName: projects/1045366563853/secrets/DB_PASS/versions/1
    env: 'DB_PASS'
  - versionName: projects/1045366563853/secrets/JWT_SECRET/versions/1
    env: 'JWT_SECRET'

# - name: "gcr.io/cloud-builders/gcloud"
#   args: ["app", "deploy"]
timeout: "3600s"
logsBucket: 'gs://artifacts.rentalbiz-387515.appspot.com'
serviceAccount: 'projects/rentalbiz-387515/serviceAccounts/cloudrun@rentalbiz-387515.iam.gserviceaccount.com'
options:
  logging: GCS_ONLY
